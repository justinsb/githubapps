#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

REPO_ROOT="$(git rev-parse --show-toplevel)"
cd ${REPO_ROOT}

if [[ -z "${GCP_PROJECT_ID:-}" ]]; then
  GCP_PROJECT_ID=$(gcloud config get project)
fi
echo "Using GCP_PROJECT_ID=$GCP_PROJECT_ID"

#IMAGE_PREFIX=gcr.io/${GCP_PROJECT_ID}/
# TODO: This is not as standardized as gcr.io
export IMAGE_PREFIX=us-central1-docker.pkg.dev/${GCP_PROJECT_ID}/registry-us-central1/
dev/tasks/build-images --push

mkdir -p k8s/projects/${GCP_PROJECT_ID}/

cat > k8s/projects/${GCP_PROJECT_ID}/kustomization.yaml <<EOF
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

resources:
- ../../manifest.yaml

images:
- name: codebot-githubapp-backend
  newName: ${IMAGE_PREFIX}codebot-githubapp-backend
EOF

kubectl create ns codebot --dry-run -oyaml | kubectl apply --server-side -f -

export KUBECTL_APPLYSET=true
kustomize build --load_restrictor=LoadRestrictionsNone k8s/projects/${GCP_PROJECT_ID}/ | \
  kubectl apply -n codebot --server-side --prune --applyset=codebot-backend -f -